// <auto-generated />
using System;
using LogicaDeAccesoADatos.BDD;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LogicaDeAccesoADatos.Migrations
{
    [DbContext(typeof(MundialContext))]
    [Migration("20221124212618_1")]
    partial class _1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LogicaDeNegocio.EntidadesNegocio.IncidenciasPartido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PartidoId")
                        .HasColumnType("int");

                    b.Property<int>("SeleccionId")
                        .HasColumnType("int");

                    b.Property<string>("TipoIncidencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Valor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PartidoId");

                    b.ToTable("IncidenciasPartido");
                });

            modelBuilder.Entity("LogicaDeNegocio.EntidadesNegocio.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdRegion")
                        .HasColumnType("int");

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsoAlfa3")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PbiPerCapita")
                        .HasColumnType("float");

                    b.Property<int>("Poblacion")
                        .HasColumnType("int");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IsoAlfa3")
                        .IsUnique()
                        .HasFilter("[IsoAlfa3] IS NOT NULL");

                    b.HasIndex("RegionId");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("LogicaDeNegocio.EntidadesNegocio.Partido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Partidos");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Partido");
                });

            modelBuilder.Entity("LogicaDeNegocio.EntidadesNegocio.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regiones");
                });

            modelBuilder.Entity("LogicaDeNegocio.EntidadesNegocio.Seleccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantidadApostadores")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grupo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdPais")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaisId")
                        .HasColumnType("int");

                    b.Property<int?>("PartidoId")
                        .HasColumnType("int");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("IdPais");

                    b.HasIndex("PaisId");

                    b.HasIndex("PartidoId");

                    b.ToTable("Selecciones");
                });

            modelBuilder.Entity("LogicaDeNegocio.EntidadesNegocio.PartidoDeGrupo", b =>
                {
                    b.HasBaseType("LogicaDeNegocio.EntidadesNegocio.Partido");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("PartidoDeGrupo");
                });

            modelBuilder.Entity("LogicaDeNegocio.EntidadesNegocio.IncidenciasPartido", b =>
                {
                    b.HasOne("LogicaDeNegocio.EntidadesNegocio.Partido", null)
                        .WithMany("Incidencias")
                        .HasForeignKey("PartidoId");
                });

            modelBuilder.Entity("LogicaDeNegocio.EntidadesNegocio.Pais", b =>
                {
                    b.HasOne("LogicaDeNegocio.EntidadesNegocio.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId");
                });

            modelBuilder.Entity("LogicaDeNegocio.EntidadesNegocio.Seleccion", b =>
                {
                    b.HasOne("LogicaDeNegocio.EntidadesNegocio.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisId");

                    b.HasOne("LogicaDeNegocio.EntidadesNegocio.Partido", null)
                        .WithMany("Seleccion")
                        .HasForeignKey("PartidoId");
                });
#pragma warning restore 612, 618
        }
    }
}
